{"version":3,"sources":["reducers/actions.ts","utils/shuffle/index.ts","utils/fill-grid/index.ts","utils/identify-square/index.ts","utils/is-in-square/index.ts","utils/check-grid/index.ts","utils/create-full-grid/index.ts","global/index.ts","utils/remove-numbers/index.ts","utils/get-random-index/index.ts","utils/copy-grid/index.ts","utils/solve-grid/index.ts","utils/compare-arrays/index.ts","reducers/reducer.ts","reducers/index.ts","reportWebVitals.ts","styles/global.ts","styles/theme.ts","components/styles/content/index.ts","components/styles/title/index.ts","components/styles/card/index.ts","components/styles/button/index.ts","components/grid/block/styles/index.ts","components/grid/block/index.tsx","components/grid/styles/index.ts","components/grid/index.tsx","components/numbers/button/index.tsx","components/numbers/styles/index.ts","components/numbers/index.tsx","components/new-button/index.tsx","core/configure-store/index.ts","index.tsx","reducers/types.ts"],"names":["createGrid","type","types","fillBlock","value","coords","selectBlock","shuffle","array","i","length","j","Math","floor","random","numbers","fillGrid","grid","row","col","includes","isNotInCol","square","identifySquare","isInSquare","checkGrid","identifyWorkingSquare","x","push","createFullGrid","global","counter","removeNumbers","attempts","getRandomIndex","backup","gridCopy","copyGrid","solveGrid","r","c","compareArrays","arr1","arr2","Array","isArray","initialState","reducer","state","action","solvedGrid","challengeGrid","workingGrid","alert","selectedBlock","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createGlobalStyle","props","css","theme","colors","background","black","blue","lightBlue","white","transition","Content","styled","div","Title","h1","Card","Button","button","Container","active","puzzle","Block","collIndex","rowIndex","useSelector","isActive","isPuzzle","dispatch","useDispatch","onClick","Row","Grid","selectedValue","create","useCallback","useEffect","fill","n","useMousetrap","Children","toArray","map","_","NumberButton","Numbers","NewButton","createNewGrid","window","confirm","persistConfig","key","storage","persistedReducer","persistReducer","configureStore","store","createStore","devToolsEnhancer","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","CREATE_GRID","FILL_BLOCK","SELECT_BLOCK"],"mappings":"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","file":"static/js/main.e9cc8797.chunk.js","sourcesContent":["import { Action, AnyAction } from \"redux\";\r\nimport { BLOCK_COORDS, NUMBERS } from \"typings\";\r\n\r\nimport * as types from \"./types\";\r\n\r\nexport const createGrid = (): Action => ({ type: types.CREATE_GRID });\r\nexport const fillBlock = (value: NUMBERS, coords: BLOCK_COORDS): AnyAction => ({\r\n  coords,\r\n  type: types.FILL_BLOCK,\r\n  value,\r\n});\r\nexport const selectBlock = (coords: BLOCK_COORDS): AnyAction => ({\r\n  type: types.SELECT_BLOCK,\r\n  coords,\r\n});\r\n","const shuffle = (array: any[]) => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n};\r\n\r\nexport default shuffle;\r\n","import { GRID, NUMBERS } from \"typings\";\r\nimport { checkGrid, identifySquare, isInSquare } from \"utils\";\r\nimport shuffle from \"utils/shuffle\";\r\n\r\nconst numbers: NUMBERS[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\nlet fillGrid = (grid: GRID) => {\r\n  let row = 0;\r\n  let col = 0;\r\n\r\n  for (let i = 0; i < 81; i++) {\r\n    row = Math.floor(i / 9);\r\n    col = i % 9;\r\n\r\n    if (grid[row][col] === 0) {\r\n      shuffle(numbers);\r\n\r\n      for (let value of numbers) {\r\n        if (!grid[row].includes(value)) {\r\n          let isNotInCol = true;\r\n          for (let i = 0; i < 9; i++) {\r\n            if (value === grid[i][col]) isNotInCol = false;\r\n          }\r\n          if (isNotInCol) {\r\n            const square = identifySquare({ col, grid, row });\r\n            if (!isInSquare({ square, value })) {\r\n              grid[row][col] = value;\r\n              if (checkGrid(grid)) return true;\r\n              else if (fillGrid(grid)) return true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      break;\r\n    }\r\n  }\r\n\r\n  grid[row][col] = 0;\r\n};\r\n\r\nexport default fillGrid;\r\n","import { GRID, SQUARE } from \"typings\";\r\n\r\ninterface IInput {\r\n  grid: GRID;\r\n  row: number;\r\n  col: number;\r\n}\r\n\r\nfunction identifyWorkingSquare({ col, grid, row }: IInput): SQUARE {\r\n  const square = [];\r\n  if (row < 3) {\r\n    if (col < 3) {\r\n      for (let x = 0; x < 3; x++) {\r\n        square.push([grid[x][0], grid[x][1], grid[x][2]]);\r\n      }\r\n    } else if (col < 6) {\r\n      for (let x = 0; x < 3; x++) {\r\n        square.push([grid[x][3], grid[x][4], grid[x][5]]);\r\n      }\r\n    } else {\r\n      for (let x = 0; x < 3; x++) {\r\n        square.push([grid[x][6], grid[x][7], grid[x][8]]);\r\n      }\r\n    }\r\n  } else if (row < 6) {\r\n    if (col < 3) {\r\n      for (let x = 3; x < 6; x++) {\r\n        square.push([grid[x][0], grid[x][1], grid[x][2]]);\r\n      }\r\n    } else if (col < 6) {\r\n      for (let x = 3; x < 6; x++) {\r\n        square.push([grid[x][3], grid[x][4], grid[x][5]]);\r\n      }\r\n    } else {\r\n      for (let x = 3; x < 6; x++) {\r\n        square.push([grid[x][6], grid[x][7], grid[x][8]]);\r\n      }\r\n    }\r\n  } else {\r\n    if (col < 3) {\r\n      for (let x = 6; x < 9; x++) {\r\n        square.push([grid[x][0], grid[x][1], grid[x][2]]);\r\n      }\r\n    } else if (col < 6) {\r\n      for (let x = 6; x < 9; x++) {\r\n        square.push([grid[x][3], grid[x][4], grid[x][5]]);\r\n      }\r\n    } else {\r\n      for (let x = 6; x < 9; x++) {\r\n        square.push([grid[x][6], grid[x][7], grid[x][8]]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return square as SQUARE;\r\n}\r\n\r\nexport default identifyWorkingSquare;\r\n","import { SQUARE, NUMBERS } from \"./../../typings/index\";\r\ninterface IInput {\r\n  square: SQUARE;\r\n  value: NUMBERS;\r\n}\r\n\r\nfunction isInSquare({ square, value }: IInput): boolean {\r\n  return [...square[0], ...square[1], ...square[2]].includes(value);\r\n}\r\n\r\nexport default isInSquare;\r\n","import { GRID } from \"typings\";\r\n\r\nfunction checkGrid(grid: GRID): boolean {\r\n  for (let i = 0; i < 9; i++) {\r\n    for (let j = 0; j < 9; j++) {\r\n      if (grid[i][j] === 0) return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nexport default checkGrid;\r\n","import { fillGrid } from \"utils\";\r\nimport { GRID } from \"typings\";\r\n\r\nfunction createFullGrid(): GRID {\r\n  let grid: GRID = [\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  ];\r\n  fillGrid(grid);\r\n\r\n  return grid;\r\n}\r\n\r\nexport default createFullGrid;\r\n","let global = {\r\n  counter: 0,\r\n};\r\nexport default global;\r\n","import { GRID } from \"typings\";\r\nimport { copyGrid, getRandomIndex, solveGrid } from \"utils\";\r\nimport global from \"global\";\r\n\r\nfunction removeNumbers(grid: GRID, attempts = 5): GRID {\r\n  while (attempts > 0) {\r\n    let row = getRandomIndex();\r\n    let col = getRandomIndex();\r\n\r\n    while (grid[row][col] === 0) {\r\n      row = getRandomIndex();\r\n      col = getRandomIndex();\r\n    }\r\n\r\n    const backup = grid[row][col];\r\n    grid[row][col] = 0;\r\n\r\n    const gridCopy = copyGrid(grid);\r\n    global.counter = 0;\r\n    solveGrid(gridCopy);\r\n\r\n    if (global.counter !== 1) {\r\n      grid[row][col] = backup;\r\n      attempts--;\r\n    }\r\n  }\r\n\r\n  return grid;\r\n}\r\n\r\nexport default removeNumbers;\r\n","function getRandomIndex() {\r\n  return Math.floor(Math.random() * 9);\r\n}\r\n\r\nexport default getRandomIndex;\r\n","import { GRID, INDEX } from \"typings\";\r\n\r\nfunction copyGrid(grid: GRID): GRID {\r\n  const gridCopy: GRID = [\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  ];\r\n\r\n  for (let r: INDEX = 0; r < 9; r++) {\r\n    for (let c: INDEX = 0; c < 9; c++) gridCopy[r][c] = grid[r][c];\r\n  }\r\n\r\n  return gridCopy;\r\n}\r\n\r\nexport default copyGrid;\r\n","import global from \"global\";\r\nimport { GRID, NUMBERS } from \"typings\";\r\nimport { checkGrid, identifySquare, isInSquare } from \"utils\";\r\n\r\nconst numbers: NUMBERS[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\nfunction solveGrid(grid: GRID) {\r\n  let row = 0;\r\n  let col = 0;\r\n\r\n  for (let i = 0; i < 81; i++) {\r\n    row = Math.floor(i / 9);\r\n    col = i % 9;\r\n\r\n    if (grid[row][col] === 0) {\r\n      for (let value of numbers) {\r\n        if (!grid[row].includes(value)) {\r\n          let isNotInCol = true;\r\n          for (let i = 0; i < 9; i++) {\r\n            if (value === grid[i][col]) isNotInCol = false;\r\n          }\r\n          if (isNotInCol) {\r\n            const square = identifySquare({ grid, row, col });\r\n            if (!isInSquare({ square, value })) {\r\n              grid[row][col] = value;\r\n              if (checkGrid(grid)) {\r\n                global.counter++;\r\n                break;\r\n              } else if (solveGrid(grid)) return true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      break;\r\n    }\r\n  }\r\n\r\n  grid[row][col] = 0;\r\n}\r\n\r\nexport default solveGrid;\r\n","function compareArrays(arr1: any[], arr2: any[]): boolean {\r\n  if (!Array.isArray(arr1) && !Array.isArray(arr2)) return arr1 === arr2;\r\n  if (arr1.length !== arr2.length) return false;\r\n  for (let i = 0; i < arr1.length; i++) {\r\n    if (!compareArrays(arr1[i], arr2[i])) return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport default compareArrays;\r\n","import { AnyAction } from \"redux\";\r\nimport * as types from \"./types\";\r\nimport { IReducer } from \"./interfaces\";\r\nimport { compareArrays, copyGrid, createFullGrid, removeNumbers } from \"utils\";\r\n\r\nconst initialState: IReducer = {};\r\n\r\nfunction reducer(state = initialState, action: AnyAction): IReducer {\r\n  switch (action.type) {\r\n    case types.CREATE_GRID: {\r\n      const solvedGrid = createFullGrid();\r\n      const gridCopy = copyGrid(solvedGrid);\r\n      const challengeGrid = removeNumbers(gridCopy);\r\n      const workingGrid = copyGrid(challengeGrid);\r\n\r\n      return {\r\n        ...state,\r\n        challengeGrid,\r\n        solvedGrid,\r\n        workingGrid,\r\n      };\r\n    }\r\n    case types.FILL_BLOCK: {\r\n      if (state.workingGrid && state.solvedGrid) {\r\n        if (\r\n          state.solvedGrid[action.coords[0]][action.coords[1]] !== action.value\r\n        ) {\r\n          alert(\"Incorrect option\");\r\n          return state;\r\n        }\r\n        state.workingGrid[action.coords[0]][action.coords[1]] = action.value;\r\n        if (compareArrays(state.workingGrid, state.solvedGrid))\r\n          alert(\"Completed!\");\r\n        return { ...state, workingGrid: [...state.workingGrid] };\r\n      }\r\n      return state;\r\n    }\r\n    case types.SELECT_BLOCK:\r\n      return { ...state, selectedBlock: action.coords };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default reducer;\r\n","import reducer from \"./reducer\";\r\n\r\nexport * from \"./actions\";\r\nexport * from \"./interfaces\";\r\n\r\nexport type IReducer = ReturnType<typeof reducer>;\r\nexport default reducer;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createGlobalStyle, css} from 'styled-components'\r\n\r\nexport default createGlobalStyle`\r\n${ props => css`\r\n    html {\r\n        height: 100%;\r\n\r\n        body {\r\n            display: flex;\r\n            flex-direction: column;\r\n            height: 100%;\r\n            margin: 0;\r\n        }\r\n\r\n        #root {\r\n            background: ${props.theme.colors.background};\r\n            color: ${props.theme.colors.black};\r\n            display: flex;\r\n            font-family: sans-serif;\r\n            height: 100%;\r\n            justify-content: center;\r\n            padding: 15px;\r\n        }\r\n    }`\r\n}\r\n`","const theme = {\r\n    colors: {\r\n        background: 'radial-gradient(#282c34cc, #282c34)',\r\n        black: '#282c34',\r\n        blue: '#a0e9fd',\r\n        lightBlue: '#caf3fe',\r\n        white: '#ffffff'\r\n    },\r\n    transition: '0.3s'\r\n};\r\n\r\nexport default theme;","import styled from 'styled-components'\r\n\r\nexport const Content = styled.div`\r\n    max-width: 500px;\r\n    display: flex;\r\n    flex: 1;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`","import styled, { css } from \"styled-components\";\r\n\r\nexport const Title = styled.h1`\r\n  ${(props) => css`\r\n    color: ${props.theme.colors.white};\r\n    text-align: center;\r\n    margin: 0;\r\n  `}\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const Card = styled.div`\r\n  ${(props) => css`\r\n    background-color: ${props.theme.colors.white};\r\n    border-radius: 15px;\r\n    display: flex;\r\n    flex: 1;\r\n    flex-direction: column;\r\n    margin-top: 20px;\r\n    max-height: 600px;\r\n    padding: 15px;\r\n  `}\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n  ${({ theme }) => css`\r\n    align-items: center;\r\n    background-color: ${theme.colors.black};\r\n    border: 2px solid ${theme.colors.black};\r\n    border-radius: 4px;\r\n    color: ${theme.colors.white};\r\n    cursor: pointer;\r\n    display: flex;\r\n    flex: 1;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    height: 40px;\r\n    justify-content: center;\r\n    margin: 4px 2px;\r\n    min-height: 40px;\r\n    opacity: 0.9;\r\n    padding: 0;\r\n    transition: ${theme.transition};\r\n\r\n    &:focus {\r\n      border-color: ${theme.colors.blue};\r\n      outline: none;\r\n    }\r\n\r\n    &:hover {\r\n      opacity: 0.6;\r\n    }\r\n  `}\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\ninterface IProps {\r\n  active?: boolean;\r\n  puzzle?: boolean;\r\n}\r\n\r\nexport const Container = styled.div<IProps>`\r\n  ${({ active, puzzle, theme }) => css`\r\n    align-items: center;\r\n    background-color: ${active ? theme.colors.blue : theme.colors.white};\r\n    border: 1px solid ${theme.colors.black};\r\n    cursor: pointer;\r\n    display: flex;\r\n    flex-grow: 1;\r\n    flex-shrink: 0;\r\n    flex-basis: 0;\r\n    font-weight: ${puzzle ? \"bold\" : \"normal\"};\r\n    font-size: 20px;\r\n    height: auto;\r\n    justify-content: center;\r\n    transition: ${theme.transition};\r\n    user-select: none;\r\n\r\n    &:before {\r\n      padding-top: 100%;\r\n      content: \"\";\r\n      float: left;\r\n    }\r\n\r\n    &:hover {\r\n      background-color: ${theme.colors.lightBlue};\r\n    }\r\n  `}\r\n`;\r\n","import React, { FC } from \"react\";\r\nimport { Container } from \"./styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IReducer, selectBlock } from \"reducers\";\r\nimport { INDEX, N } from \"typings\";\r\nimport { AnyAction, Dispatch } from \"redux\";\r\n\r\ninterface IProps {\r\n  collIndex: INDEX;\r\n  rowIndex: INDEX;\r\n}\r\n\r\ninterface IState {\r\n  isActive: boolean;\r\n  value: N;\r\n  isPuzzle: boolean;\r\n}\r\n\r\nexport const Block: FC<IProps> = ({ collIndex, rowIndex }) => {\r\n  const state = useSelector<IReducer, IState>(\r\n    ({ workingGrid, selectedBlock, challengeGrid }) => ({\r\n      isActive: selectedBlock\r\n        ? selectedBlock[0] === rowIndex && selectedBlock[1] === collIndex\r\n        : false,\r\n      isPuzzle:\r\n        challengeGrid && challengeGrid[rowIndex][collIndex] !== 0\r\n          ? true\r\n          : false,\r\n      value: workingGrid ? workingGrid[rowIndex][collIndex] : 0,\r\n    })\r\n  );\r\n  const dispatch = useDispatch<Dispatch<AnyAction>>();\r\n\r\n  function handleClick() {\r\n    if (!state.isActive) dispatch(selectBlock([rowIndex, collIndex]));\r\n  }\r\n  return (\r\n    <Container\r\n      active={state.isActive}\r\n      onClick={handleClick}\r\n      puzzle={state.isPuzzle}\r\n    >\r\n      {state.value === 0 ? \"\" : state.value}\r\n    </Container>\r\n  );\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 10px 0;\r\n`;\r\n\r\nexport const Row = styled.div`\r\n  ${(props) => css`\r\n    display: flex;\r\n    flex-flow: row;\r\n\r\n    &:nth-child(1) {\r\n      div {\r\n        border-top: solid 4px ${props.theme.colors.black};\r\n      }\r\n    }\r\n\r\n    &:nth-child(3),\r\n    &:nth-child(6) {\r\n      div {\r\n        border-bottom: solid 3px ${props.theme.colors.black};\r\n      }\r\n    }\r\n\r\n    &:nth-child(9) {\r\n      div {\r\n        border-bottom: solid 4px ${props.theme.colors.black};\r\n      }\r\n    }\r\n\r\n    div {\r\n      &:nth-child(1) {\r\n        border-left: solid 4px ${props.theme.colors.black};\r\n      }\r\n\r\n      &:nth-child(3),\r\n      &:nth-child(6) {\r\n        border-right: solid 3px ${props.theme.colors.black};\r\n      }\r\n\r\n      &:nth-child(9) {\r\n        border-right: solid 4px ${props.theme.colors.black};\r\n      }\r\n    }\r\n  `}\r\n`;\r\n","import { FC, Children, useCallback, useEffect } from \"react\";\r\nimport useMousetrap from \"react-hook-mousetrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AnyAction, Dispatch } from \"redux\";\r\nimport { Block } from \"./block\";\r\nimport { Container, Row } from \"./styles\";\r\nimport { createGrid, fillBlock, IReducer, selectBlock } from \"reducers\";\r\nimport { BLOCK_COORDS, GRID, INDEX, N, NUMBERS } from \"typings\";\r\n\r\ninterface IState {\r\n  selectedBlock?: BLOCK_COORDS;\r\n  selectedValue: N;\r\n  solvedGrid?: GRID;\r\n}\r\n\r\nexport const Grid: FC = () => {\r\n  const state = useSelector<IReducer, IState>(\r\n    ({ selectedBlock, solvedGrid, workingGrid }) => ({\r\n      selectedBlock,\r\n      selectedValue:\r\n        workingGrid && selectedBlock\r\n          ? workingGrid[selectedBlock[0]][selectedBlock[1]]\r\n          : 0,\r\n      solvedGrid,\r\n    })\r\n  );\r\n  const dispatch = useDispatch<Dispatch<AnyAction>>();\r\n  const create = useCallback(() => dispatch(createGrid()), [dispatch]);\r\n  useEffect(() => {\r\n    if (!state.solvedGrid) create();\r\n  }, [create, state.solvedGrid]);\r\n\r\n  const fill = useCallback(\r\n    (n: NUMBERS) => {\r\n      if (state.selectedBlock && state.selectedValue === 0) {\r\n        dispatch(fillBlock(n, state.selectedBlock));\r\n      }\r\n    },\r\n    [dispatch, state.selectedBlock, state.selectedValue]\r\n  );\r\n\r\n  function moveDown() {\r\n    if (state.selectedBlock && state.selectedBlock[0] < 8)\r\n      dispatch(\r\n        selectBlock([\r\n          (state.selectedBlock[0] + 1) as INDEX,\r\n          state.selectedBlock[1],\r\n        ])\r\n      );\r\n  }\r\n\r\n  function moveLeft() {\r\n    if (state.selectedBlock && state.selectedBlock[1] > 0)\r\n      dispatch(\r\n        selectBlock([\r\n          state.selectedBlock[0],\r\n          (state.selectedBlock[1] - 1) as INDEX,\r\n        ])\r\n      );\r\n  }\r\n\r\n  function moveRight() {\r\n    if (state.selectedBlock && state.selectedBlock[1] < 8)\r\n      dispatch(\r\n        selectBlock([\r\n          state.selectedBlock[0],\r\n          (state.selectedBlock[1] + 1) as INDEX,\r\n        ])\r\n      );\r\n  }\r\n\r\n  function moveUp() {\r\n    if (state.selectedBlock && state.selectedBlock[0] > 0)\r\n      dispatch(\r\n        selectBlock([\r\n          (state.selectedBlock[0] - 1) as INDEX,\r\n          state.selectedBlock[1],\r\n        ])\r\n      );\r\n  }\r\n\r\n  useMousetrap(\"1\", () => fill(1));\r\n  useMousetrap(\"2\", () => fill(2));\r\n  useMousetrap(\"3\", () => fill(3));\r\n  useMousetrap(\"4\", () => fill(4));\r\n  useMousetrap(\"5\", () => fill(5));\r\n  useMousetrap(\"6\", () => fill(6));\r\n  useMousetrap(\"7\", () => fill(7));\r\n  useMousetrap(\"8\", () => fill(8));\r\n  useMousetrap(\"9\", () => fill(9));\r\n  useMousetrap(\"down\", moveDown);\r\n  useMousetrap(\"up\", moveUp);\r\n  useMousetrap(\"left\", moveLeft);\r\n  useMousetrap(\"right\", moveRight);\r\n\r\n  return (\r\n    <Container>\r\n      {Children.toArray(\r\n        [...Array(9)].map((_, rowIndex) => (\r\n          <Row>\r\n            {Children.toArray(\r\n              [...Array(9)].map((_, collIndex) => (\r\n                <Block\r\n                  collIndex={collIndex as INDEX}\r\n                  rowIndex={rowIndex as INDEX}\r\n                />\r\n              ))\r\n            )}\r\n          </Row>\r\n        ))\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n","import React, { Dispatch, FC, useCallback } from \"react\";\r\nimport { BLOCK_COORDS, N, NUMBERS } from \"typings\";\r\nimport { Button } from \"components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fillBlock, IReducer } from \"reducers\";\r\nimport { AnyAction } from \"redux\";\r\n\r\ninterface IProps {\r\n  value: NUMBERS;\r\n}\r\n\r\ninterface IState {\r\n  selectedBlock?: BLOCK_COORDS;\r\n  selectedValue: N;\r\n}\r\n\r\nexport const NumberButton: FC<IProps> = ({ value }) => {\r\n  const state = useSelector<IReducer, IState>(\r\n    ({ selectedBlock, workingGrid }) => ({\r\n      selectedBlock,\r\n      selectedValue:\r\n        workingGrid && selectedBlock\r\n          ? workingGrid[selectedBlock[0]][selectedBlock[1]]\r\n          : 0,\r\n    })\r\n  );\r\n  const dispatch = useDispatch<Dispatch<AnyAction>>();\r\n\r\n  const fill = useCallback(() => {\r\n    if (state.selectedBlock && state.selectedValue === 0)\r\n      dispatch(fillBlock(value, state.selectedBlock));\r\n  }, [dispatch, state.selectedBlock, state.selectedValue, value]);\r\n  return <Button onClick={fill}>{value}</Button>;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-flow: row;\r\n`;\r\n","import React, { FC } from \"react\";\r\n\r\nimport { NUMBERS } from \"typings\";\r\nimport { NumberButton } from \"./button\";\r\nimport { Container } from \"./styles\";\r\n\r\nexport const Numbers: FC = () => {\r\n  return (\r\n    <Container>\r\n      {([1, 2, 3, 4, 5, 6, 7, 8, 9] as NUMBERS[]).map((value) => (\r\n        <NumberButton value={value} key={value} />\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n","import { Button } from \"components\";\r\nimport { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createGrid } from \"reducers\";\r\nimport { AnyAction, Dispatch } from \"redux\";\r\n\r\nexport const NewButton = () => {\r\n  const dispatch = useDispatch<Dispatch<AnyAction>>();\r\n\r\n  const createNewGrid = useCallback(() => {\r\n    if (window.confirm(\"Are you sure you want to start a new game?\"))\r\n      dispatch(createGrid());\r\n  }, [dispatch]);\r\n  return <Button onClick={createNewGrid}>New game</Button>;\r\n};\r\n","import reducer from \"reducers\";\r\nimport { createStore } from \"redux\";\r\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\r\nimport { persistReducer, persistStore } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\n\r\nfunction configureStore() {\r\n  const store = createStore(persistedReducer, devToolsEnhancer({}));\r\n  const persistor = persistStore(store);\r\n  return { store, persistor };\r\n}\r\n\r\nexport default configureStore;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from \"reportWebVitals\";\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles, theme } from \"styles/index\";\nimport { Card, Content, Grid, Title, Numbers, NewButton } from \"components\";\nimport { configureStore } from \"core\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst { store, persistor } = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <Provider store={store}>\n        <PersistGate persistor={persistor} loading={null}>\n          <Content>\n            <Title>Sudoku</Title>\n            <Card>\n              <NewButton />\n              <Grid />\n              <Numbers />\n            </Card>\n          </Content>\n        </PersistGate>\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n","export const CREATE_GRID = \"CREATE_GRID\";\r\nexport const FILL_BLOCK = \"FILL_BLOCK\";\r\nexport const SELECT_BLOCK = \"SELECT_BLOCK\";\r\n"],"sourceRoot":""}